options:
  parameters:
    author: edwin
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: lab_test
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: freq
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: freq
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: 2402e6
    step: 1e6
    stop: 2480e6
    value: 2432e6
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 4.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 4e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: trigger
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: trigger
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '-100'
    step: '1'
    stop: '0'
    value: '-15'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [736, 12.0]
    rotation: 0
    state: true
- name: analog_const_source_x_0
  id: analog_const_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [896, 708.0]
    rotation: 0
    state: true
- name: analog_pwr_squelch_xx_0
  id: analog_pwr_squelch_xx
  parameters:
    affinity: ''
    alias: ''
    alpha: 5e-3
    comment: ''
    gate: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    ramp: '0'
    threshold: trigger
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [768, 380.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_arg_0
  id: blocks_complex_to_arg
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [568, 776.0]
    rotation: 0
    state: true
- name: blocks_complex_to_arg_1
  id: blocks_complex_to_arg
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1632, 784.0]
    rotation: 0
    state: true
- name: blocks_correctiq_0
  id: blocks_correctiq
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 392.0]
    rotation: 0
    state: true
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [760, 920.0]
    rotation: 0
    state: true
- name: blocks_file_sink_0_3
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: /home/edwin/channel5.bin
    type: byte
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1640, 404.0]
    rotation: 0
    state: true
- name: blocks_head_0
  id: blocks_head
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: '40000000'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1240, 572.0]
    rotation: 0
    state: disabled
- name: blocks_magphase_to_complex_0
  id: blocks_magphase_to_complex
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1168, 768.0]
    rotation: 0
    state: true
- name: blocks_sub_xx_0
  id: blocks_sub_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 784.0]
    rotation: 0
    state: true
- name: digital_gfsk_demod_0
  id: digital_gfsk_demod
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    freq_error: '0.001'
    gain_mu: '0.175'
    log: 'False'
    maxoutbuf: '0'
    minoutbuf: '0'
    mu: '0.01'
    omega_relative_limit: '0.005'
    samples_per_symbol: '4'
    sensitivity: '1'
    verbose: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1368, 380.0]
    rotation: 0
    state: true
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "import csv\nimport numpy\nimport pmt\nfrom gnuradio import gr\n\
      \nclass selective_save(gr.sync_block):\n    def __init__(self, filepath='output.csv',\
      \ sampling_rate=1e6):\n        gr.sync_block.__init__(\n            self,\n\
      \            name=\"Selective Save\",\n            in_sig=[numpy.float32],\n\
      \            out_sig=None\n        )\n        self.filepath = filepath\n   \
      \     self.sampling_rate = sampling_rate\n        self.duration_samples = int((100e-6)\
      \ * self.sampling_rate)  # 100 us worth of samples\n        self.squelch_active\
      \ = False\n        self.sample_count = 0\n        self.csvfile = open(self.filepath,\
      \ 'w', newline='')\n        self.csvwriter = csv.writer(self.csvfile, delimiter=',')\n\
      \        self.index = 1\n\n    def work(self, input_items, output_items):\n\
      \        in0 = input_items[0]\n        ninput_items = len(in0)\n        tags\
      \ = self.get_tags_in_window(0, 0, ninput_items)\n\n        # Check for squelch_sob\
      \ tag to activate recording\n        for tag in tags:\n            key = pmt.symbol_to_string(tag.key)\n\
      \            if key == 'squelch_sob':\n                self.squelch_active =\
      \ True\n                self.sample_count = 0\n\n        # If squelch is active\
      \ and we haven't reached the desired duration, record data\n        if self.squelch_active:\n\
      \            end_idx = min(ninput_items, self.sample_count + self.duration_samples)\n\
      \            for idx in range(self.sample_count, end_idx):\n               \
      \ value = in0[idx]\n                # Only save values within -0.5 to 0.5\n\
      \                if -0.15 <= value <= 0.15:\n                    self.csvwriter.writerow([value,\
      \ self.index])\n                    self.index += 1\n            self.sample_count\
      \ += ninput_items\n\n            # Stop recording if we've reached the duration\
      \ limit\n            if self.sample_count >= self.duration_samples:\n      \
      \          self.squelch_active = False\n\n        return ninput_items\n\n  \
      \  def stop(self):\n        self.csvfile.close()\n        return True\n\n"
    affinity: ''
    alias: ''
    comment: ''
    filepath: '"/home/edwin/Downloads/plotting.csv"'
    maxoutbuf: '0'
    minoutbuf: '0'
    sampling_rate: 4e6
  states:
    _io_cache: ('Selective Save', 'selective_save', [('filepath', "'output.csv'"),
      ('sampling_rate', '1000000.0')], [('0', 'float', 1)], [], '', ['filepath', 'sampling_rate'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2368, 84.0]
    rotation: 0
    state: disabled
- name: epy_block_1_0
  id: epy_block
  parameters:
    _source_code: "import csv\nimport numpy as np \nimport pmt\nfrom gnuradio import\
      \ gr\n\nclass selective_save(gr.sync_block):\n    def __init__(self, filepath='output.csv',\
      \ sampling_rate=1e6, median_symbols=100):\n        gr.sync_block.__init__(\n\
      \            self,\n            name=\"Selective Save\",\n            in_sig=[np.float32],\n\
      \            out_sig=None\n        )\n        self.filepath = filepath\n   \
      \     self.sampling_rate = sampling_rate\n        self.duration_samples = int((50e-6)\
      \ * self.sampling_rate)  # 100 us worth of samples\n        self.median_symbols\
      \ = median_symbols\n        self.squelch_active = False\n        self.sample_count\
      \ = 0\n        self.positive_phases = []\n        self.negative_phases = []\n\
      \        self.data_points = []\n        self.csvfile = open(self.filepath, 'w',\
      \ newline='')\n        self.csvwriter = csv.writer(self.csvfile, delimiter=',')\n\
      \        self.index = 1\n\n    def work(self, input_items, output_items):\n\
      \        in0 = input_items[0]\n        ninput_items = len(in0)\n        tags\
      \ = self.get_tags_in_window(0, 0, ninput_items)\n\n        # Check for squelch_sob\
      \ tag to activate recording\n        for tag in tags:\n            key = pmt.symbol_to_string(tag.key)\n\
      \            if key == 'squelch_sob':\n                self.squelch_active =\
      \ True\n                self.sample_count = 0\n\n        # If squelch is active\
      \ and we haven't reached the desired duration, record data\n        if self.squelch_active:\n\
      \            end_idx = min(ninput_items, self.sample_count + self.duration_samples)\n\
      \            for idx in range(self.sample_count, end_idx):\n               \
      \ value = in0[idx]\n                # Only save values within -0.5 to 0.5\n\
      \                if -0.15 <= value <= 0.15:\n                    if value >\
      \ 0:\n                        self.positive_phases.append(value)\n         \
      \           elif value < 0:\n                        self.negative_phases.append(value)\n\
      \            self.sample_count += ninput_items\n\n            # Stop recording\
      \ if we've reached the duration limit\n            if self.sample_count >= self.duration_samples:\n\
      \                self.squelch_active = False\n\n        # Proceed with calculations\
      \ if enough data points are collected\n        if len(self.positive_phases)\
      \ > self.median_symbols and len(self.negative_phases) > self.median_symbols:\n\
      \            pos_quantile = np.median(self.positive_phases)\n            neg_quantile\
      \ = np.median(self.negative_phases)\n            cfo = (pos_quantile + neg_quantile)\
      \ / 2\n            deviation = (pos_quantile - cfo)\n\n            # Write calculations\
      \ to CSV\n            self.csvwriter.writerow([cfo, deviation])\n          \
      \  \n            # Reset the lists\n            self.positive_phases = []\n\
      \            self.negative_phases = []\n\n        return ninput_items\n\n  \
      \  def stop(self):\n        self.csvfile.close()\n        return True\n\n"
    affinity: ''
    alias: ''
    comment: ''
    filepath: '"/home/edwin/Downloads/IphoneSE_2022_3Gen.csv"'
    maxoutbuf: '0'
    median_symbols: '100'
    minoutbuf: '0'
    sampling_rate: 4e6
  states:
    _io_cache: ('Selective Save', 'selective_save', [('filepath', "'output.csv'"),
      ('sampling_rate', '1000000.0'), ('median_symbols', '100')], [('0', 'float',
      1)], [], '', ['filepath', 'median_symbols', 'sampling_rate'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1856, 628.0]
    rotation: 0
    state: enabled
- name: freq_xlating_fir_filter_xxx_0_0
  id: freq_xlating_fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    center_freq: '0'
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    taps: firdes.complex_band_pass(1, 4e6, -0.5e6, 0.5e6, 50e3, window.WIN_HAMMING)
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 380.0]
    rotation: 0
    state: true
- name: freq_xlating_fir_filter_xxx_0_0_0
  id: freq_xlating_fir_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    center_freq: '0'
    comment: ''
    decim: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    taps: firdes.complex_band_pass(1, 4e6, -0.5e6, 0.5e6, 150e3, window.WIN_HAMMING)
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1032, 396.0]
    rotation: 0
    state: true
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: ''
    label1: ''
    label10: ''
    label2: ''
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '""'
    nconnections: '1'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [968, 116.0]
    rotation: 0
    state: disabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '4096'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1096, 196.0]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_1
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: '0'
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1496, 652.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_2
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"phase demod"'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1856, 828.0]
    rotation: 0
    state: disabled
- name: soapy_hackrf_source_0
  id: soapy_hackrf_source
  parameters:
    affinity: ''
    alias: ''
    amp: 'True'
    bandwidth: '0'
    center_freq: freq
    comment: ''
    dev_args: ''
    gain: '20'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fc32
    vga: '20'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 380.0]
    rotation: 0
    state: true

connections:
- [analog_const_source_x_0, '0', blocks_magphase_to_complex_0, '0']
- [analog_pwr_squelch_xx_0, '0', blocks_complex_to_arg_0, '0']
- [analog_pwr_squelch_xx_0, '0', freq_xlating_fir_filter_xxx_0_0_0, '0']
- [analog_pwr_squelch_xx_0, '0', qtgui_const_sink_x_0, '0']
- [analog_pwr_squelch_xx_0, '0', qtgui_freq_sink_x_0, '0']
- [blocks_complex_to_arg_0, '0', blocks_delay_0, '0']
- [blocks_complex_to_arg_0, '0', blocks_sub_xx_0, '0']
- [blocks_complex_to_arg_1, '0', epy_block_1_0, '0']
- [blocks_complex_to_arg_1, '0', qtgui_time_sink_x_2, '0']
- [blocks_correctiq_0, '0', freq_xlating_fir_filter_xxx_0_0, '0']
- [blocks_delay_0, '0', blocks_sub_xx_0, '1']
- [blocks_head_0, '0', digital_gfsk_demod_0, '0']
- [blocks_magphase_to_complex_0, '0', blocks_complex_to_arg_1, '0']
- [blocks_magphase_to_complex_0, '0', qtgui_freq_sink_x_1, '0']
- [blocks_sub_xx_0, '0', blocks_magphase_to_complex_0, '1']
- [digital_gfsk_demod_0, '0', blocks_file_sink_0_3, '0']
- [freq_xlating_fir_filter_xxx_0_0, '0', analog_pwr_squelch_xx_0, '0']
- [freq_xlating_fir_filter_xxx_0_0_0, '0', blocks_head_0, '0']
- [freq_xlating_fir_filter_xxx_0_0_0, '0', digital_gfsk_demod_0, '0']
- [soapy_hackrf_source_0, '0', blocks_correctiq_0, '0']

metadata:
  file_format: 1
